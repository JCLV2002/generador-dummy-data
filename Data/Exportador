import tkinter as tk
from tkinter import ttk,filedialog
import json
import csv

def eleccion():
    formato_elegido = formato_combobox.get()
    alumnos_texto = texto_widget.get("1.0", "end-1c")  # Obtener el texto de los alumnos

    if not alumnos_texto:
        return

    if formato_elegido == "csv":
        generar_csv(alumnos_texto)
    elif formato_elegido == "json":
        generar_json(alumnos_texto)
    elif formato_elegido == "sql":
        generar_sql(alumnos_texto)
    elif formato_elegido == "xml":
        generar_xml(alumnos_texto)
    else:
        print("Formato inválido")

def generar_csv(alumnos_texto):
    alumnos = alumnos_texto.split("\n")
    salida = []

    for alumno in alumnos:
        if alumno:
            salida.append(alumno.split(", "))

    # Escribir los datos en un archivo CSV llamado alumnos.csv
    with open("alumnos.csv", "w", newline="", encoding="utf-8") as file:
        writer = csv.writer(file)
        writer.writerows(salida)

def generar_json(alumnos_texto):
    alumnos = []
    lineas = alumnos_texto.split("\n")
    for linea in lineas:
        if linea:
            alumno = linea.split(", ")
            alumnos.append({
                "expediente": alumno[0],
                "apellido1": alumno[1],
                "apellido2": alumno[2],
                "nombre": alumno[3],
                "correo": alumno[4],
                "fechaNacimiento": alumno[5]
            })
    
    with open("alumnos.json", "w") as file:
        json.dump(alumnos, file, indent=2)

def generar_sql(alumnos_texto):
    salida = "CREATE DATABASE IF NOT EXISTS evento;\n USE evento;\nCREATE TABLE IF NOT EXISTS asistentes(expediente INT NOT NULL, apellido1 VARCHAR(255), apellido2 VARCHAR(255), nombre VARCHAR(255), correo VARCHAR(255) NOT NULL, fechaNacimiento DATE);\n INSERT INTO asistentes (expediente, apellido1, apellido2, nombre, correo, fechaNacimiento) VALUES\n"

    lineas = alumnos_texto.split("\n")
    for linea in lineas:
        if linea:
            alumno = linea.split(", ")
            salida += f"('{alumno[0]}', '{alumno[1]}', '{alumno[2]}', '{alumno[3]}', '{alumno[4]}', '{alumno[5]}'),\n"

    # Eliminar la coma extra al final y agregar punto y coma
    salida = salida[:-2] + ";"

    # Escribir el script en un archivo llamado alumnos.sql
    with open("alumnos.sql", "w") as file:
        file.write(salida)

def generar_xml(alumnos_texto):
    salida = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<asistentes>\n"
    
    lineas = alumnos_texto.split("\n")
    for linea in lineas:
        if linea:
            alumno = linea.split(", ")
            salida += "  <asistente>\n"
            salida += f"    <expediente>{alumno[0]}</expediente>\n"
            salida += f"    <apellido1>{alumno[1]}</apellido1>\n"
            salida += f"    <apellido2>{alumno[2]}</apellido2>\n"
            salida += f"    <nombre>{alumno[3]}</nombre>\n"
            salida += f"    <correo>{alumno[4]}</correo>\n"
            salida += f"    <fechaNacimiento>{alumno[5]}</fechaNacimiento>\n"
            salida += "  </asistente>\n"
    
    salida += "</asistentes>"
    
    # Escribir el contenido XML en un archivo llamado alumnos.xml
    with open("alumnos.xml", "w") as file:
        file.write(salida)

def cargar_archivo():
    # Abrir el cuadro de diálogo para seleccionar el archivo
    ruta_archivo = filedialog.askopenfilename(filetypes=[("Archivos de texto", "*.txt")])
    
    # Leer el contenido del archivo seleccionado
    if ruta_archivo:
        with open(ruta_archivo, "r", encoding="utf-8") as file:
            for linea in file:
                # Procesar cada línea del archivo
                datos_alumno = linea.strip().split(",")  # Separar los datos por coma
                # Construir una cadena con los datos del alumno
                texto_alumno = ", ".join(datos_alumno)
                # Mostrar los datos del alumno en el widget de texto
                texto_widget.insert(tk.END, texto_alumno + "\n")

# Crear la ventana principal
root = tk.Tk()
root.title("Generador de archivos")

# Crear el Combobox para elegir el formato
formatos = ["csv", "json", "sql", "xml"]
formato_combobox = ttk.Combobox(root, values=formatos)
formato_combobox.grid(row=1, column=0, padx=5, pady=5)

# Crear el botón para generar
boton_generar = tk.Button(root, text="Generar", command=eleccion)
boton_generar.grid(row=1, column=1, padx=5, pady=5)

# Crear un widget de texto para mostrar el contenido del archivo
texto_widget = tk.Text(root, wrap="word")
texto_widget.grid(row=2, column=0, columnspan=2, sticky="nsew")

# Crear un botón para cargar el archivo
cargar_button = tk.Button(root, text="Cargar archivo", command=cargar_archivo)
cargar_button.grid(row=3, column=0, columnspan=2, pady=5)


root.mainloop()
